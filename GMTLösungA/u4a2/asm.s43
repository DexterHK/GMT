#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        MOV #0x0002,R5
        MOV #0x0005,R6
        MOV #0x0,R8
        MOV #0x0,R7
        ADD R5,R7
        ADD R6,R7
        ADC R8                          ; Überprüft, ob bei R8's Carry Flag true ist, falls Carry flag 1 ist sollte R8 um 1 erhöht
        RRC R7                         ;RRA Rotate right arithmetically  ; R5/2 ? R5, Schieben wir die Bits um 1 nach rechts
        ADC R8                          ; überprüft, ob wir ein Carry-Bit haben, falls ja, dann sollte R8 den Carry bit haben.
                                        ; Register 7 hat den Wert 3 und R8 hat den Wert 1, was auf die Kommastelle sich bezieht.
        jmp $                           ; jump to current location '$'
         



        END
